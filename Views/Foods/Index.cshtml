@model FoodHub.ViewModels.FoodIndexViewModel
@using PagedList.Mvc

@{
    ViewBag.Title = "Foods";
}

<h2>@ViewBag.Title</h2>

<p>
    @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all" : "You search for " + Model.Search + " found") @Model.Foods.TotalItemCount foods
</p>


<p>

    @if (Request.IsAuthenticated && User.IsInRole("Admin"))
    {
        @Html.ActionLink("Create New", "Create")
    }

    @using (Html.BeginRouteForm("FoodsIndex", FormMethod.Get))
    {
        <label>Filter by category:</label>
        @Html.DropDownListFor(vm => vm.FoodCategory, Model.CatFilterItems, "All");
        <label>Filter by vendor:</label>
        @Html.DropDownListFor(vm => vm.Vendor, Model.VendFilterItems, "All");
        <label>Sort by:</label>
        @Html.DropDownListFor(vm => vm.SortBy, new SelectList(Model.Sorts, "Value", "Key"), "Default")
        <input type="submit" value="Filter" />

        <input type="hidden" name="Search" id="Search" value="@Model.Search" />
    }
</p>
<table class="table">
    <tr>
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.FoodCategory)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Vendor)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Foods.First().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Foods.First().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Foods.First().Price)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Foods)
    {
        <tr>
            <td>
                @if (item.FoodImageMappings != null && item.FoodImageMappings.Any())
                {
                    <a href="@Url.Action("Details", new { id = item.Id})">
                        <img src="@(Url.Content(Constants.FoodImagePath) + item.FoodImageMappings.OrderBy(pim => pim.ImageNumber).ElementAt(0).FoodImage.FileName)">
                    </a>

                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FoodCategory.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Vendor.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @if (Request.IsAuthenticated && User.IsInRole("Admin"))
                {
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                    @Html.Raw(" | ")
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                }
            </td>
        </tr>
    }

</table>

<div>
    Page @(Model.Foods.PageCount < Model.Foods.PageNumber ? 0 :
    Model.Foods.PageNumber) of @Model.Foods.PageCount
    @Html.PagedListPager(Model.Foods, page => Url.Action("Index", new { category = @Model.FoodCategory, Search = @Model.Search, sortBy = @Model.SortBy, page }))
</div>
